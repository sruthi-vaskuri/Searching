class Solution:
    def no_of_elements(self,mat,m):
        i1=0
        j1=len(mat)-1
        while(i1<=j1):
            mid=(i1+j1)//2
            if mat[mid]>m:
                j1=mid-1
            else:
                i1=mid+1
        return i1
    def median(self, matrix, r, c):
    	#code here 
    	maxi=0
    	for i in range(r):
    	    maxi=max(maxi,matrix[i][c-1])
    	low=1
    	high=maxi
    	while(low<=high):
    	    mid=(low+high)//2
    	    count=0
    	    for k in range(r):
    	        count+=self.no_of_elements(matrix[k],mid)
    	    if count<=(r*c)//2:
    	        low=mid+1
    	    else:
    	        high=mid-1
    	return low
      
      
Time Complexity : log(maxi)*r*log(C)
Space Complexity : O(1)


REFERENCE : https://www.youtube.com/watch?v=63fPPOdIr2c
LINK : https://practice.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix1527/1#
